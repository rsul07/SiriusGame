# --- Блок 1: HTTP-трафик (порт 80) ---
# Его главная задача - проходить проверку Certbot и перенаправлять все на HTTPS.
server {
    listen 80;
    server_name siriusgames.ru www.siriusgames.ru;

    # Этот location ОБЯЗАТЕЛЕН для Let's Encrypt, чтобы он мог подтвердить, что вы владеете доменом.
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    # Все остальные запросы на порт 80 навсегда перенаправляем на HTTPS-версию.
    location / {
        return 301 https://$host$request_uri;
    }
}

# --- Блок 2: HTTPS-трафик (порт 443) ---
# Основной блок, который обслуживает и сайт, и API.
server {
    listen 443 ssl http2;
    server_name siriusgames.ru www.siriusgames.ru;

    # --- Пути к SSL сертификатам ---
    # Nginx будет искать их в volume, который мы подключим в docker-compose.
    ssl_certificate /etc/letsencrypt/live/siriusgames.ru/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/siriusgames.ru/privkey.pem;

    # --- Корень сайта и обработка Vue Router ---
    root /usr/share/nginx/html;
    index index.html;

    # Правило для Single Page Application (Vue):
    # Если файл или папка не найдены, отдать index.html, чтобы Vue Router сработал.
    location / {
        try_files $uri $uri/ /index.html;
    }

    # --- Проксирование API на бэкенд ---
    # Все запросы, начинающиеся с /api/, перенаправляем на FastAPI.
    location /api/ {
        # Слэш в конце ВАЖЕН! Он правильно проксирует /api/docs -> /docs.
        proxy_pass http://api:8000/;

        # Передаем важные заголовки, чтобы FastAPI знал реальный IP и протокол клиента.
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # --- Обработка 404 ошибки ---
    # Если Nginx не нашел какой-то ресурс (например, несуществующий .css файл),
    # он отдаст index.html, чтобы Vue Router мог показать свою страницу "NotFound".
    error_page 404 /index.html;
}
