import { defineStore } from 'pinia'
import { ref, computed } from 'vue'
import { fetchEventsApi } from '@/api/events'

// –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã –≤—ã–Ω–µ—Å–µ–Ω—ã –¥–ª—è —è—Å–Ω–æ—Å—Ç–∏
export interface Leader {
  id: number
  name: string
  score: number
  avatarUrl: string
}

export interface Activity {
  icon: string
  name: string
  color: string
}

export interface Media {
  id: number
  url: string
  media_type: 'image' | 'document'
  name?: string
  order: number
}

export interface IEvent {
  id: number
  title: string
  is_team: boolean
  date: string
  state: 'future' | 'current' | 'past'
  description: string
  start_time?: string
  end_time?: string
  max_members?: number
  max_teams?: number
  media: Media[]
  // –†–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–µ–º, —á—Ç–æ–±—ã TS –Ω–µ —Ä—É–≥–∞–ª—Å—è –≤ –¥—Ä—É–≥–∏—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞—Ö
  leaderboard?: Leader[]
  activities?: Activity[]
}

export const useEventStore = defineStore('events', () => {
  const events = ref<IEvent[]>([])
  const isLoading = ref(false)
  const error = ref<string | null>(null)

  const getEventById = computed(() => {
    return (id: number) => events.value.find(event => event.id === id)
  })

  async function fetchEvents(force = false) {
    if (events.value.length > 0 && !force) return
    
    isLoading.value = true
    error.value = null
    
    try {
      events.value = await fetchEventsApi()
      
      // --- –í–†–ï–ú–ï–ù–ù–´–ô –ë–õ–û–ö –î–õ–Ø –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–ò ---
      // –î–æ–±–∞–≤–ª—è–µ–º –º–æ–∫-–¥–∞–Ω–Ω—ã–µ –∫ –¥–∞–Ω–Ω—ã–º –∏–∑ API, —á—Ç–æ–±—ã –±—ã–ª–æ —á—Ç–æ –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å.
      // –ö–æ–≥–¥–∞ –≤–∞—à API –±—É–¥–µ—Ç –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å leaderboard –∏ activities, —ç—Ç–æ—Ç –±–ª–æ–∫ –º–æ–∂–Ω–æ —É–±—Ä–∞—Ç—å.
      if (events.value.length > 0) {
        events.value[0].leaderboard = [
            { id: 1, name: '–ï–ª–µ–Ω–∞ –í–∞—Å–∏–ª—å–µ–≤–∞', score: 100, avatarUrl: 'https://i.pravatar.cc/150?u=1' },
            { id: 2, name: '–ò–≤–∞–Ω –ì—Ä–æ–∑–Ω—ã–π', score: 95, avatarUrl: 'https://i.pravatar.cc/150?u=2' },
            { id: 3, name: '–ú–∞—Ä–∏—è –ö—É–∑–Ω–µ—Ü–æ–≤–∞', score: 92, avatarUrl: 'https://i.pravatar.cc/150?u=3' },
            { id: 8, name: '–ê–ª–µ–∫—Å–µ–π –ü–µ—Ç—Ä–æ–≤', score: 88, avatarUrl: 'https://i.pravatar.cc/150?u=8' },
        ];
        events.value[0].activities = [
            { icon: 'üèÅ', name: '–§–∏–Ω–∞–ª—å–Ω–∞—è –≥–æ–Ω–∫–∞', color: 'bg-red-100' },
            { icon: 'üõ†Ô∏è', name: '–¢–µ—Ö-–ø–∏—Ç—Å—Ç–æ–ø', color: 'bg-blue-100' },
        ];
      }
      // --- –ö–û–ù–ï–¶ –í–†–ï–ú–ï–ù–ù–û–ì–û –ë–õ–û–ö–ê ---

    } catch (err: any) {
      error.value = err.message || '–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è'
      console.error(err)
    } finally {
      isLoading.value = false
    }
  }

  function reset() {
    events.value = []
    error.value = null
  }

  return { 
    events,
    isLoading,
    error,
    getEventById,
    fetchEvents,
    reset
  }
})